- name: read current meta file
  slurp:
    src: "{{ source_dir }}/{{ item }}"
  register: result

- set_fact:
    newfile: "{{ result['content'] | b64decode | trim }}"

- name: read old meta file
  slurp:
    src: "{{ source_dir }}/{{ item }}.old"
  register: result

- set_fact:
    oldfile: "{{ result['content'] | b64decode | trim }}"

- name: upload the new file
  aws_s3:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    bucket: "{{ bucket_id }}"
    object: "/content/{{ newfile }}"
    src: "{{ source_dir }}/{{ newfile }}"
    mode: put
  when: newfile != oldfile

- name: delete the old file
  aws_s3:
    aws_access_key: "{{ lookup('env', 'AWS_ACCESS_KEY_ID') }}"
    aws_secret_key: "{{ lookup('env', 'AWS_SECRET_ACCESS_KEY') }}"
    bucket: "{{ bucket_id }}"
    object: "/content/{{ oldfile }}"
    mode: delobj
  when: newfile != oldfile
  
- name: mark the file as processed
  copy:
    src: "{{ source_dir }}/{{ item }}"
    dest: "{{ source_dir }}/{{ item }}.old"
    remote_src: yes
